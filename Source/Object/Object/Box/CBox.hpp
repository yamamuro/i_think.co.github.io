#pragma once

#include "../Object/ObjectBase/CObjectBase.hpp"


class CBox : public CObjectBase
{

	/*==========================================================*/
	//!
	//! \file
	//! \class CBox
	//! \brief <b>ボックスの管理クラス</b>
	//! 
	//! \author Y.Yamamuro \n
	//! \date  2014/09/10
	//! \since 2014/09/12
	//!
	/*==========================================================*/

public:

	/*===============================================*/
	//! \brief デフォルトコンストラクタ
	/*===============================================*/
	CBox( void );

	/*===================================*/
	//! \brief 個別の初期化
	/*===================================*/
	void DiscreteInit( void );
	

	/*=====================================*/
	//! \brief デストラクタ
	/*=====================================*/
	~CBox( void );


	/*================================*/
	//! \brief 更新
	/*================================*/
	void Exec( void );


	/*=========================================================*/
	//! \brief オブジェクトの色を更新する
	/*=========================================================*/
	void ColorUpdate( void );


	/*================================================*/
	//! \brief 描画
	//! \param[in] &_d3d	描画する為に使用
	/*================================================*/
	void Draw( CDirect3D &_d3d );

	/*=======================================================*/
	//! \brief 行列を指定して描画
	//! \param[in] &_d3d		描画する為に使用
	//! \param[in] *_mWorld		行列の指定
	/*=======================================================*/
	void Draw( CDirect3D & _d3d , D3DXMATRIX *_mWorld );


	/*======================================*/
	//! \brief 浮遊キャンセル
	/*======================================*/
	inline void ResetAntiGravity( void )
	{
		m_AntiGravity_Energy = 0; 
		m_MovablePower = 0;
	}


	/*================================================*/
	//! \brief デフォルトの質量を返す
	/*================================================*/
	inline NxReal GetDefMass( void ){ return m_Mass; }


	/*=============================================================*/
	//! \brief ジョイントしているかのフラグのセッタ
	/*=============================================================*/
	inline void SetisJointFlag( bool _Flag ){ m_isJoint = _Flag; }


private:

	NxReal m_Mass;					//!< アクターの質量
	int m_MovablePower;				//!< 移動する力の残量
	D3DXVECTOR3 m_MovableVec;		//!< 移動する方向

	bool m_isJoint;					//!< ジョイントしているかどうかのフラグ

};